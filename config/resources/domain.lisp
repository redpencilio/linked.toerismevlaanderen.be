(in-package :mu-cl-resources)

(defparameter *cache-count-queries* nil)
(defparameter *supply-cache-headers-p* t
  "when non-nil, cache headers are supplied.  this works together with mu-cache.")
(setf *cache-model-properties-p* t)
(defparameter *include-count-in-paginated-responses* t
  "when non-nil, all paginated listings will contain the number
   of responses in the result object's meta.")
(defparameter *max-group-sorted-properties* nil)

;;;;;;
;;;
;;; Classes specified in Logies AP
;;;
;;;;;;

(define-resource agent ()
  :class (s-prefix "dct:Agent")
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/agents/")
  :on-path "agents")

(define-resource rating ()
  :class (s-prefix "schema:Rating")
  :properties `((:rating-value :string ,(s-prefix "schema:ratingValue"))
                (:description :language-string-set ,(s-prefix "schema:description"))
                (:best-rating :string ,(s-prefix "schema:bestRating"))
                (:worst-rating :string ,(s-prefix "schema:worstRating"))
                (:issued-date :datetime ,(s-prefix "dct:issued")))
  :has-one `((registered-organization :via ,(s-prefix "schema:author")
                                      :as "author"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/ratings/")
  :on-path "ratings")

(define-resource description ()
  :class (s-prefix "logies:Beschrijving")
  :properties `((:text :language-string-set ,(s-prefix "schema:value"))
                (:modified-on :datetime ,(s-prefix "schema:dateModified"))
                (:name :language-string-set ,(s-prefix "schema:name"))
                (:publication-date :datetime ,(s-prefix "schema:datePublished")))
  ;;; TODO add 'heeft_auteur ?
  :has-one `((creative-work :via ,(s-prefix "schema:exampleOfWork")
                            :as "example-of")
             (creative-work :via ,(s-prefix "schema:translationOfWork")
                            :as "translation-of")
             (license :via ,(s-prefix "schema:license")
                      :as "license")
             (audience :via ,(s-prefix "schema:audience")
                       :as "audience"))
  :has-many `((creative-work :via ,(s-prefix "schema:exampleOfWork")
                             :inverse t
                             :as "examples")
              (creative-work :via ,(s-prefix "schema:translationOfWork")
                             :inverse t
                             :as "translations"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/descriptions/")
  :on-path "descriptions")

(define-resource creative-work ()
  :class (s-prefix "schema:CreativeWork")
  :properties `((:modified-on :datetime ,(s-prefix "schema:dateModified"))
                (:name :language-string-set ,(s-prefix "schema:name"))
                (:publication-date :datetime ,(s-prefix "schema:datePublished")))
  ;;; TODO add 'heeft_auteur ?
  :has-one `((creative-work :via ,(s-prefix "schema:exampleOfWork")
                            :as "example-of")
             (creative-work :via ,(s-prefix "schema:translationOfWork")
                            :as "translation-of")
             (license :via ,(s-prefix "schema:license")
                      :as "license")
             (audience :via ,(s-prefix "schema:audience")
                       :as "audience"))
  :has-many `((creative-work :via ,(s-prefix "schema:exampleOfWork")
                             :inverse t
                             :as "examples")
              (creative-work :via ,(s-prefix "schema:translationOfWork")
                             :inverse t
                             :as "translations"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/creative-works/")
  :on-path "creative-works")

(define-resource facility ()
  :class (s-prefix "logies:Faciliteit")
  :properties `((:valid-through :datetime ,(s-prefix "schema:validThrough"))
                (:valid-from :datetime ,(s-prefix "schema:validFrom"))
                (:description :language-string-set ,(s-prefix "schema:description"))
                (:name :language-string-set ,(s-prefix "schema:name")))
  :has-one `((facility :via ,(s-prefix "logies:isSpecialisatieVan")
                       :as "is-specialisation-of"))
  :has-many `((facility :via ,(s-prefix "logies:isSpecialisatieVan")
                        :inverse t
                        :as "specialisations"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/facilities/")
  :on-path "facilities")

(define-resource registered-organization ()
  :class (s-prefix "regorg:RegisteredOrganization")
  :properties `((:legal-name :language-string-set ,(s-prefix "regorg:legalName"))
                (:legal-personality :url ,(s-prefix "organisatie:rechtspersoonlijkheid"))
                (:legal-form :url ,(s-prefix "organisatie:rechtsvorm"))
                (:legal-status :url ,(s-prefix "organisatie:rechtstoestand")))
  :has-one `((registration :via ,(s-prefix "regorg:registration")
                           :as "registration"))
  :features '(include-uri)
  :resource-base (s-url "http://linked-toerismevlaanderen.be/id/registered-organizations/")
  :on-path "registered-organizations")

(define-resource quality-label ()
  :class (s-prefix "logies:Kwaliteitslabel")
  :properties `((:description :language-string-set ,(s-prefix "schema:description"))
                (:label :language-string-set ,(s-prefix "skos:prefLabel"))
                (:issued-date :datetime ,(s-prefix "dct:issued")))
  :has-one `((registered-organization :via ,(s-prefix "schema:author")
                                      :as "author"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/quality-labels/")
  :on-path "quality-labels")

(define-resource lodging ()
  :class (s-prefix "logies:Logies")
  :properties `((:number-of-sleeping-places :number ,(s-prefix "logies:aantalSlaapplaatsen"))
                (:number-of-rental-units :number ,(s-prefix "logies:aantalVerhuureenheden"))
                (:alternative-name :language-string-set ,(s-prefix "schema:alternativeName"))
                (:name :language-string-set ,(s-prefix "schema:name")))
  :has-many `((touristic-region :via ,(s-prefix "logies:behoortTotToeristischeRegio")
                                :as "belongs-to-touristic-regions")
              (quantitative-value :via ,(s-prefix "logies:capaciteit")
                                  :as "capacities")
              (audience :via ,(s-prefix "schema:audience")
                        :as "audiences")
              (lodging :via ,(s-prefix "logies:heeftAlternatieveUitbating")
                       :as "alternative-exploitations")
              (description :via ,(s-prefix "logies:heeftBeschrijving")
                           :as "descriptions")
              (facility :via ,(s-prefix "schema:amenityFeature")
                        :as "facilities")
              (quality-label :via ,(s-prefix "logies:heeftKwaliteitslabel")
                             :as "quality-labels")
              (media-object :via ,(s-prefix "logies:heeftMedia")
                            :as "media")
              (rating :via ,(s-prefix "schema:starRating")
                      :as "official-ratings")
              (registration :via ,(s-prefix "logies:heeftRegistratie")
                            :as "registrations")
              (rental-unit :via ,(s-prefix "logies:heeftVerhuureenheid")
                           :as "rental-units")
              (contact-point :via ,(s-prefix "schema:contactPoint")
                             :as "contact-points")
              (address :via ,(s-prefix "logies:onthaalAdres")
                       :as "welcome-addresses"))
  :has-one `((identifier :via ,(s-prefix "adms:identifier")
                         :as "identifier")
             (geometry :via ,(s-prefix "logies:onthaalLocatie")
                       :as "welcome-locations"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/lodgings/")
  :on-path "lodgings")

(define-resource media-object ()
  :class (s-prefix "logies:MediaObject")
  :properties `((:modified-on :datetime ,(s-prefix "schema:dateModified"))
                (:name :language-string-set ,(s-prefix "schema:name"))
                (:publication-date :datetime ,(s-prefix "schema:datePublished"))
                (:description :language-string-set ,(s-prefix "schema:description"))
                (:caption :language-string-set ,(s-prefix "schema:caption"))
                (:content-url :url ,(s-prefix "schema:contentUrl"))
                (:exif-data :url ,(s-prefix "schema:exifDate"))
                (:thumbnail-url :url ,(s-prefix "schema:thumbnailUrl")))
  ;;; TODO add 'heeft_auteur ?
  :has-one `((creative-work :via ,(s-prefix "schema:exampleOfWork")
                            :as "example-of")
             (creative-work :via ,(s-prefix "schema:translationOfWork")
                            :as "translation-of")
             (license :via ,(s-prefix "schema:license")
                      :as "license")
             (audience :via ,(s-prefix "schema:audience")
                       :as "audience")
             (file-format :via ,(s-prefix "dct:format")
                          :as "format")
             (quantitative-value :via ,(s-prefix "schema:width")
                                 :as "width")
             (quantitative-value :via ,(s-prefix "schema:height")
                                 :as "height")
             (geometry :via ,(s-prefix "logies:locatie")
                       :as "location"))
  :has-many `((creative-work :via ,(s-prefix "schema:exampleOfWork")
                             :inverse t
                             :as "examples")
              (creative-work :via ,(s-prefix "schema:translationOfWork")
                             :inverse t
                             :as "translations")
              (language :via ,(s-prefix "schema:inLanguage")
                        :as "languages"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/media-objects/")
  :on-path "media-objects")

(define-resource registration ()
  :class (s-prefix "logies:Registratie")
  :has-one `((registration :via ,(s-prefix "generiek:isTijdspecialisatieVan")
                           :as "is-specialisation-in-time-of")
             (generation :via ,(s-prefix "prov:qualifiedGeneration")
                         :as "generation")
             (invalidation :via ,(s-prefix "prov:qualifiedInvalidation")
                           :as "invalidation")
             (identifier :via ,(s-prefix "adms:identifier")
                         :as "identifier")
             (registration-status :via ,(s-prefix "logies:registratieStatus")
                                  :as "registration-status")
             (registration-lodging-type :via ,(s-prefix "dct:type")
                                        :as "type"))
    ;;; TODO add 'verantwoordelijkeOrganisatie' ?
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/registrations/")
  :on-path "registrations")

(define-resource room ()
  :class (s-prefix "logies:Ruimte")
  :properties `((:description :language-string-set ,(s-prefix "schema:description")))
  :has-many `((facility :via ,(s-prefix "schema:amenityFeature")
                        :as "facilities"))
  :has-one `((locator-designator :via ,(s-prefix "logies:locatieaanduiding")
                                 :as "locator-designator")
             (rental-unit :via ,(s-prefix "logies:heeftKamer")
                          :inverse t
                          :as "rental-unit")
             (room-type :via ,(s-prefix "dct:type")
                        :as "type"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/rooms/")
  :on-path "rooms")

(define-resource touristic-region ()
  :class (s-prefix "logies:ToeristischeRegio")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :has-many `((location :via ,(s-prefix "logies:bevatPlaats")
                        :as "contains-location"))
  :has-one `((geometry :via ,(s-prefix "locn:geometry")
                       :as "geometry"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/touristic-regions/")
  :on-path "touristic-regions")

(define-resource rental-unit ()
  :class (s-prefix "logies:Verhuureenheid")
  :properties `((:number-of-rooms :number ,(s-prefix "schema:numberOfRooms"))
                (:number-of-sleeping-places :number ,(s-prefix "logies:aantalSlaapplaatsen"))
                (:name :language-string-set ,(s-prefix "schema:name")))
  :has-many `((facility :via ,(s-prefix "schema:amenityFeature")
                        :as "facilities")
              (room :via ,(s-prefix "logies:heeftKamer")
                    :as "rooms")
              (quantitative-value :via ,(s-prefix "logies:capaciteit")
                                  :as "capacities"))
  :has-one `((geometry :via ,(s-prefix "logies:locatie")
                       :as "location"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/rental-units/")
  :on-path "rental-units")

;;;;;;
;;;
;;; Classes not specified in Logies AP
;;;
;;;;;;

(define-resource location ()
  :class (s-prefix "dct:Location")
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/locations/")
  :on-path "locations")


(define-resource license ()
  :class (s-prefix "dct:LicenseDocument")
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/licenses/")
  :on-path "licenses")

;;;;;;
;;;
;;; Datatypes
;;;
;;;;;;

(define-resource address ()
  :class (s-prefix "locn:Address")
  :properties `((:admin-unit-level-1 :language-string-set ,(s-prefix "locn:adminUnitL1"))
                (:admin-unit-level-2 :language-string-set ,(s-prefix "locn:adminUnitL2"))
                (:address-area :language-string-set ,(s-prefix "locn:addressArea"))
                (:house-number-suffix :string ,(s-prefix "adres:Adresvoorstelling.busnummer"))
                (:municipality :language-string-set ,(s-prefix "adres:gemeentenaam"))
                (:house-number :string ,(s-prefix "adres:Adresvoorstelling.huisnummer"))
                (:country :language-string-set ,(s-prefix "adres:land"))
                (:locator-designator :string ,(s-prefix "locn:locatorDesignator"))
                (:locator-name :language-string-set ,(s-prefix "locn:locatorName"))
                (:po-box :string ,(s-prefix "locn:poBox"))
                (:post-code :string ,(s-prefix "locn:postCode"))
                (:post-name :string ,(s-prefix "locn:postName"))
                (:thoroughfare :string ,(s-prefix "locn:thoroughfare"))
                (:references :url ,(s-prefix "adres:verwijstNaar"))
                (:full-address :language-string-set ,(s-prefix "locn:fullAddress")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/addresses/")
  :on-path "addresses")

(define-resource contact-point ()
  :class (s-prefix "schema:ContactPoint")
  :properties `((:honorific-prefix :language-string-set ,(s-prefix "vcard:honorific-prefix"))
                (:email :string ,(s-prefix "schema:email"))
                (:fax :string ,(s-prefix "schema:faxNumber"))
                (:name :string ,(s-prefix "foaf:name"))
                (:page :url ,(s-prefix "foaf:page"))
                (:telephone :string ,(s-prefix "schema:telephone")))
  ;;; TODO add openingsuren
  ;;; TOOD add uren beschikbaarheid
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/contact-points/")
  :on-path "contact-points")

(define-resource geometry ()
  :class (s-prefix "locn:Geometry")
  :properties `((:as-gml :string ,(s-prefix "geosparql:asGML"))
                (:as-wkt :string ,(s-prefix "geosparql:asWKT")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/geometries/")
  :on-path "geometries")

(define-resource identifier ()
  :class (s-prefix "adms:Identifier")
  :properties `((:notation :string ,(s-prefix "skos:notation"))
                (:issued-by :string ,(s-prefix "adms:schemaAgency"))
                (:issued-date :datetime ,(s-prefix "dct:issued")))
  :has-one `((agent :via ,(s-prefix "dct:creator")
                    :as "creator"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/identifiers/")
  :on-path "identifiers")

(define-resource quantitative-value ()
  :class (s-prefix "schema:QuantitativeValue")
  :properties `((:unit :language-string-set ,(s-prefix "schema:unitText"))
                (:value :number ,(s-prefix "schema:value")))
  :has-one `((standardized-unit :via ,(s-prefix "schema:unitCode")
                                :as "standardized-unit"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/quatitative-values/")
  :on-path "quantitative-values")


(define-resource locator-designator ()
  :class (s-prefix "adres:Locatieaanduiding")
  :properties `((:designator :string ,(s-prefix "adres:Locatieaanduiding.aanduiding")))
  :has-one `((locator-designator-type :via ,(s-prefix "adres:Locatieaanduiding.type")
                                      :as "type"))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/locator-designators/")
  :on-path "locator-designators")

(define-resource point ()
  :class (s-prefix "wgs:Point")
  :properties `((:latitude :number ,(s-prefix "wgs:lat"))
                (:longitude :number ,(s-prefix "wgs:long")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/points/")
  :on-path "points")

(define-resource generation ()
  :class (s-prefix "prov:Generation")
  :properties `((:timestamp :datetime ,(s-prefix "prov:atTime"))
                (:activity :url ,(s-prefix "prov:activity")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/generations/")
  :on-path "generations")

(define-resource invalidation ()
  :class (s-prefix "prov:Invalidation")
  :properties `((:timestamp :datetime ,(s-prefix "prov:atTime"))
                (:activity :url ,(s-prefix "prov:activity")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/invalidations/")
  :on-path "invalidations")

;;;;;;
;;;
;;; Codelists
;;;
;;;;;;

(define-resource standardized-unit ()
  :class (s-prefix "ext:StandardizedUnit")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/standardized-units/")
  :on-path "standardized-units")

(define-resource audience ()
  :class (s-prefix "ext:Audience")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/audiences/")
  :on-path "audiences")

(define-resource language ()
  :class (s-prefix "ext:Language")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/languages/")
  :on-path "languages")

(define-resource file-format ()
  :class (s-prefix "ext:FileFormat")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/file-formats/")
  :on-path "file-formats")

(define-resource locator-designator-type ()
  :class (s-prefix "ext:LocatorDesignatorType")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://inspire.ec.europa.eu/codelist/LocatorDesignatorTypeValue/")
  :on-path "locator-designator-types")

(define-resource registration-status ()
  :class (s-prefix "ext:RegistrationStatus")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/registration-statuses/")
  :on-path "registration-statuses")

(define-resource registration-lodging-type ()
  :class (s-prefix "ext:RegistrationLodgingType")
  :properties `((:label :language-string-set ,(s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linked.toerismevlaanderen.be/id/registration-lodging-type/")
  :on-path "registration-lodging-types")
